{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","Form","useForm","form","useState","pickerV","setPickerV","time","settime","domain","authCode","userName","showNewRole","showToDoForm","roleList","ids","roles","finish","bizId","state","setState","getRoleList","axios","get","then","res","result","JSON","parse","data","body","list","catch","error","alert","stringify","changeBoxToDo","event","id","target","name","index","indexOf","slice","push","value","splice","finishLearn","message","success","post","userId","sessionStorage","getItem","headers","useEffect","corpId","dd","permission","requestAuthCode","onSuccess","code","setItem","setTimeout","errorMsg","onFail","err","setFieldsValue","title","url","createTime","formTitle","formContent","now","Date","className","src","location","search","param","arr","split","getBizId","type","onClick","map","group","role","i","onChange","length","onFinish","origin","window","moment","format","Item","label","rules","required","placeholder","style","marginRight","visible","onClose","min","setHours","getHours","precision","onConfirm","val","s","htmlType","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.ff3778d8.chunk.js","sourcesContent":["import * as dd from \"dingtalk-jsapi\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport react, { useState, useEffect } from \"react\"\nimport { Button, Checkbox, Form, Input, message } from \"antd\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\nimport { withRouter } from \"react-router-dom\"\n\nconst App = (props) => {\n  const [form] = Form.useForm()\n  const [pickerV, setPickerV] = useState(false)\n  const [time, settime] = useState(null)\n  // state.domain 内网穿透工具介绍:\n  // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n  // 替换成后端服务域名\n  const [state, setState] = useState({\n    domain: \"\",\n    authCode: \"\",\n    userName: \"\",\n    showNewRole: true, //角色列表\n    showToDoForm: false, //任务表单\n    roleList: [],\n    ids: [],\n    roles: [],\n    finish: false,\n    bizId: \"\",\n  })\n  const loginAction = (corpId) => {\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId, //企业 corpId\n      onSuccess: function (res) {\n        // 调用成功时回调\n        state.authCode = res.code\n        axios\n          .get(state.domain + \"/login?authCode=\" + state.authCode)\n          .then((res) => {\n            if (res && res.data.success) {\n              let userId = res.data.data.userId\n              sessionStorage.setItem(\"userId\", userId)\n              let userName = res.data.data.userName\n              message.success(\"登录成功，你好\" + userName)\n              setState({\n                ...state,\n                userName: userName,\n              })\n              setTimeout(function () {\n                getRoleList()\n              }, 0)\n            } else {\n              message.error(res.data.errorMsg)\n            }\n          })\n          .catch((error) => {\n            alert(\"httpRequest failed --->\" + JSON.stringify(error))\n          })\n      },\n      onFail: function (err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      },\n    })\n  }\n\n  const getRoleList = () => {\n    axios\n      .get(state.domain + \"/role/list\")\n      .then((res) => {\n        let result = JSON.parse(res.data.data.body)\n        setState({\n          ...state,\n          roleList: result.result.list,\n          showNewRole: true,\n          showToDoForm: false,\n        })\n      })\n      .catch((error) => {\n        alert(JSON.stringify(error))\n      })\n  }\n\n  const newToDo = () => {\n    if (!state.ids.length) return\n    setState({ ...state, showToDoForm: true, showNewRole: false })\n  }\n\n  const changeBoxToDo = (event) => {\n    let id = event.target.name\n    let index = state.ids.indexOf(id)\n    if (index === -1) {\n      let ids = state.ids.slice(0)\n      ids.push(event.target.name)\n      let roles = state.roles.slice(0)\n      roles.push(event.target.value)\n      setState({ ...state, ids: ids, roles: roles })\n    } else {\n      let ids = state.ids.slice(0)\n      let roles = state.roles.slice(0)\n      ids.splice(index, 1)\n      roles.splice(index, 1)\n      setState({ ...state, ids: ids, roles: roles })\n    }\n  }\n\n  const onSubmit = (data) => {\n    data.ids = state.ids\n    data.origin = window.location.origin\n    data.url = origin + data.url\n    data.createTime = moment(data.createTime).format(\"YYYY-MM-DD HH:mm\")\n    axios\n      .post(state.domain + \"/learnToDo/new\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"创建学习任务待办成功！\")\n        } else {\n          message.error(\"创建学习任务待办失败！\")\n          return\n        }\n        setState({\n          ...state,\n          showNewRole: true,\n          showToDoForm: false,\n          ids: [],\n        })\n      })\n      .catch((error) => {\n        alert(JSON.stringify(error))\n      })\n  }\n  const getBizId = (param) => {\n    if (param) {\n      let arr = param.split(\"=\")\n      if (arr) {\n        if (arr[0].indexOf(\"?bizId\") !== -1) {\n          setState({\n            ...state,\n            bizId: arr[1],\n          })\n        }\n      }\n    } else {\n      alert(\"param error!!!\", param)\n    }\n  }\n\n  const finishLearn = () => {\n    if (state.finish) {\n      message.success(\"已完成\")\n      return\n    }\n    axios\n      .post(\n        state.domain + \"/learnToDo/update\",\n        {\n          userId: sessionStorage.getItem(\"userId\"),\n          bizId: state.bizId,\n        },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        message.success(\"完成学习\")\n        setState({\n          ...state,\n          finish: true,\n        })\n      })\n      .catch((error) => {\n        alert(JSON.stringify(error))\n      })\n  }\n\n  useEffect(() => {\n    axios\n      .get(state.domain + \"/getCorpId\")\n      .then((res) => {\n        if (res.data) {\n          loginAction(res.data)\n        }\n      })\n      .catch((error) => {\n        alert(\"corpId err, \" + JSON.stringify(error))\n      })\n\n    form.setFieldsValue({\n      title: \"学习任务待办\",\n      url: \"/toLearn\",\n      createTime: \"2021-06-30 15:00:00\",\n      formTitle: \"学习标题\",\n      formContent: \"学习内容\",\n    })\n  }, [])\n  const now = new Date()\n\n  return (\n    <div className=\"content\">\n      <div className=\"header\">\n        <img\n          src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n          className=\"headImg\"\n        />\n        钉钉模板\n      </div>\n      {props.location.search ? (\n        <div className=\"App\">\n          {(() => {\n            if (state.bizId === \"\") {\n              getBizId(props.location.search)\n            }\n            return state.finish ? (\n              <div className=\"finishOrLearn\">已完成</div>\n            ) : (\n              <div className=\"finishOrLearn\">\n                <p>学习中。。。</p>\n                <br />\n                <Button type=\"primary\" onClick={finishLearn}>\n                  完成学习\n                </Button>\n              </div>\n            )\n          })()}\n        </div>\n      ) : (\n        <div className=\"App\">\n          <div className=\"padding\">\n            <h5 className=\"title\">\n              {(() => {\n                if (state.showNewRole) {\n                  return \"角色列表\"\n                } else if (state.showToDoForm) {\n                  return `学习任务代办人：${state.roles}`\n                }\n              })()}\n            </h5>\n            {state.showNewRole && (\n              <div>\n                {state.roleList.map((group, index) => {\n                  return (\n                    <div className=\"checkbox\">\n                      {group.roles.map((role, i) => (\n                        <div className=\"check\">\n                          <Checkbox\n                            name={role.id}\n                            value={role.name}\n                            onChange={changeBoxToDo}\n                          >\n                            {role.name}\n                          </Checkbox>\n                          <br />\n                        </div>\n                      ))}\n                    </div>\n                  )\n                })}\n                {state.ids.length > 0 && (\n                  <Button type=\"primary\" onClick={newToDo}>\n                    创建待办学习任务\n                  </Button>\n                )}\n              </div>\n            )}\n            {state.showToDoForm && (\n              <div className=\"padding\">\n                <Form form={form} onFinish={onSubmit}>\n                  <Form.Item\n                    label=\"任务标题\"\n                    name=\"title\"\n                    rules={[{ required: true, message: \"任务标题必填\" }]}\n                  >\n                    <Input placeholder=\"请输入标题\" />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"任务链接\"\n                    name=\"url\"\n                    rules={[{ required: true, message: \"任务链接必填\" }]}\n                  >\n                    <Input placeholder=\"请输入任务链接\" />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"待办时间\"\n                    name=\"createTime\"\n                    rules={[{ required: true, message: \"待办时间必选\" }]}\n                  >\n                    <Button\n                      type=\"primary\"\n                      onClick={() => setPickerV(true)}\n                      style={{ marginRight: \"12px\" }}\n                    >\n                      {time ? \"已选择待办时间\" : \"选择待办时间\"}\n                    </Button>\n\n                    <DatePicker\n                      visible={pickerV}\n                      onClose={() => {\n                        setPickerV(false)\n                      }}\n                      min={new Date(now.setHours(now.getHours()))}\n                      precision=\"minute\"\n                      onConfirm={(val, s) => {\n                        settime(val)\n                        form.setFieldsValue({\n                          createTime: val,\n                        })\n                      }}\n                    >\n                      {(value) => {\n                        return value\n                          ? moment(value).format(\"YYYY-MM-DD HH:mm\")\n                          : moment(now).format(\"YYYY-MM-DD HH:mm\")\n                      }}\n                    </DatePicker>\n                  </Form.Item>\n                  <Form.Item\n                    label=\"学习标题\"\n                    name=\"formTitle\"\n                    rules={[{ required: true, message: \"学习标题必填\" }]}\n                  >\n                    <Input placeholder=\"请输入学习标题\" />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"学习内容\"\n                    name=\"formContent\"\n                    rules={[{ required: true, message: \"学习内容必填\" }]}\n                  >\n                    <Input placeholder=\"请输入学习内容\" />\n                  </Form.Item>\n                  <Button htmlType=\"submit\" type=\"primary\">\n                    提交\n                  </Button>\n                </Form>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"antd/dist/antd.min.css\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Route path={`/`} component={App}></Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}