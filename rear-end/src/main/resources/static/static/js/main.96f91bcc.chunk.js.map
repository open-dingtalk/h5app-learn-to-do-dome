{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["LoginBtn","props","showLogin","type","onClick","RoleListBtn","showRoleList","NewRoleBoard","showNewRole","todoItems","roleList","map","group","index","roles","role","i","name","id","value","onChange","ToDoFormBoard","showToDoForm","className","placeholder","form","title","url","createTime","formTitle","formContent","App","state","domain","corpId","authCode","userId","userName","ids","Array","bizId","finish","param","arr","split","indexOf","this","setState","alert","axios","post","headers","then","res","catch","error","JSON","stringify","location","search","login","getBizId","status","finishLearn","getRoleList","e","changeBoxToDo","newToDo","join","updateFormData","newWorkRecord","target","data","success","event","slice","push","splice","get","result","parse","body","list","loginAction","_this","dd","permission","requestAuthCode","onSuccess","code","setTimeout","onFail","err","React","Component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"4RAMA,SAASA,EAASC,GAChB,OAAGA,EAAMC,UAEL,8BACE,wBAAQC,KAAK,SAASC,QAASH,EAAMG,QAArC,yCAGE,wBAEV,SAASC,EAAYJ,GACnB,OAAGA,EAAMK,aAEL,8BACE,wBAAQH,KAAK,SAASC,QAASH,EAAMG,QAArC,+CAGE,wBAIV,SAASG,EAAaN,GACpB,GAAGA,EAAMO,YAAY,CACnB,IAAMC,EAAYR,EAAMS,SAASC,KAAI,SAACC,EAAOC,GAC3C,IAAMC,EAAQF,EAAME,MAAMH,KAAI,SAACI,EAAMC,GAAP,OAC5B,iCACE,uBAAOb,KAAK,WAAWc,KAAMF,EAAKG,GAAIC,MAAOJ,EAAKE,KAChDG,SAAUnB,EAAMmB,WAElB,+BAAOL,EAAKE,SAJHF,EAAKG,OAOlB,OACI,gCACE,8BAAMN,EAAMK,OACZ,8BACGH,MAHKD,MAShB,OACE,gCACE,wBAAQV,KAAK,SAASC,QAASH,EAAMG,QAArC,8DACCK,KAGN,OAAO,wBAEV,SAASY,EAAcpB,GACrB,OAAGA,EAAMqB,aAEH,2DAEI,4DAAWrB,EAAMa,SACjB,sBAAKS,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,qBAAKA,UAAU,mBAAf,SACE,uBAAON,KAAK,QAAQM,UAAU,QAAQC,YAAY,2BAC3CL,MAAOlB,EAAMwB,KAAKC,MAClBN,SAAUnB,EAAMmB,gBAI3B,qBAAKG,UAAU,cACf,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,qBAAKA,UAAU,mBAAf,SACE,uBAAON,KAAK,MAAMM,UAAU,QAAQC,YAAY,uCACzCL,MAAOlB,EAAMwB,KAAKE,IAClBP,SAAUnB,EAAMmB,gBAI3B,qBAAKG,UAAU,cACf,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,qBAAKA,UAAU,mBAAf,SACE,uBAAON,KAAK,aAAaM,UAAU,QAAQC,YAAY,oDAChDL,MAAOlB,EAAMwB,KAAKG,WAClBR,SAAUnB,EAAMmB,mBAK7B,sBAAKG,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,qBAAKA,UAAU,mBAAf,SACE,uBAAON,KAAK,YAAYM,UAAU,QAAQC,YAAY,uCAC/CL,MAAOlB,EAAMwB,KAAKI,UAClBT,SAAUnB,EAAMmB,gBAI3B,qBAAKG,UAAU,cACf,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,qBAAKA,UAAU,mBAAf,SACE,uBAAON,KAAK,cAAcM,UAAU,QAAQC,YAAY,uCACjDL,MAAOlB,EAAMwB,KAAKK,YAClBV,SAAUnB,EAAMmB,mBAK7B,8BACE,wBAAQjB,KAAK,SAASC,QAASH,EAAMG,QAArC,+BAIJ,wB,IAGJ2B,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACD+B,MAAQ,CAIXC,OAAO,GACPC,OAAQ,GACRC,SAAS,GACTC,OAAO,GACPC,SAAS,GACTnC,WAAW,EACXI,cAAc,EACdE,aAAa,EACbc,cAAc,EACdZ,SAAU,GACV4B,IAAI,IAAIC,MACRzB,MAAM,IAAIyB,MACVd,KAAK,CACHC,MAAM,uCACNC,IAAI,WACJC,WAAW,sBACXC,UAAU,2BACVC,YAAY,4BAEdU,MAAM,GACNC,QAAO,GA1BQ,E,4CA8BnB,SAASC,GACP,GAAGA,EAAM,CACP,IAAIC,EAAMD,EAAME,MAAM,KACnBD,IAC8B,GAA5BA,EAAI,GAAGE,QAAQ,UAChBC,KAAKC,SAAS,CACZP,MAAMG,EAAI,UAKhBK,MAAM,iBAAkBN,K,yBAG5B,WAAc,IAAD,OACRI,KAAKd,MAAMS,OACZO,MAAM,sBAGRC,IAAMC,KAAKJ,KAAKd,MAAMC,OAAS,oBAAqB,CAClDG,OAAOU,KAAKd,MAAMI,OAClBI,MAAMM,KAAKd,MAAMQ,OACjB,CAACW,QAAQ,CAAC,eAAe,sBAAsBC,MAAK,SAAAC,GACpDL,MAAM,4BAEN,EAAKD,SAAS,CACZN,QAAO,OAERa,OAAM,SAAAC,GACPP,MAAMQ,KAAKC,UAAUF,S,oBAKzB,WAAU,IAAD,OACHb,EAAQI,KAAK7C,MAAMyD,SAASC,OAChC,GAAGjB,EAAM,CACkB,KAAtBI,KAAKd,MAAMI,QACZU,KAAKc,QAEiB,KAArBd,KAAKd,MAAMQ,OACZM,KAAKe,SAASnB,GAEhB,IAAIoB,EAAShB,KAAKd,MAAMS,OAAS,qDAAiB,uEAEhD,uBACA,uBACA,uBACA,uBACA,uBACA,wBAAQtC,KAAK,SAASC,QAAS,kBAAM,EAAK2D,eAA1C,yCAEF,OACI,8BACGD,IAIP,OACI,gCACE,cAAC9D,EAAD,CACIE,UAAW4C,KAAKd,MAAM9B,UACtBE,QAAS,kBAAM,EAAKwD,WAExB,cAACvD,EAAD,CACIC,aAAcwC,KAAKd,MAAM1B,aACzBF,QAAS,kBAAM,EAAK4D,iBAExB,8BACE,+BACE,cAACzD,EAAD,CACIC,YAAasC,KAAKd,MAAMxB,YACxBE,SAAUoC,KAAKd,MAAMtB,SACrBU,SAAU,SAAC6C,GAAD,OAAO,EAAKC,cAAcD,IACpC7D,QAAS,SAAC6D,GAAD,OAAO,EAAKE,QAAQF,UAIrC,8BACE,+BACE,cAAC5C,EAAD,CACIC,aAAcwB,KAAKd,MAAMV,aACzBR,MAAOgC,KAAKd,MAAMlB,MAAMsD,KAAK,KAC7B3C,KAAMqB,KAAKd,MAAMP,KACjBL,SAAU,SAAC6C,GAAD,OAAO,EAAKI,eAAeJ,IACrC7D,QAAS,SAAC6D,GAAD,OAAO,EAAKK,cAAcL,e,4BAUrD,SAAeA,GACb,IAAIxC,EAAOqB,KAAKd,MAAMP,KACtB,OAAQwC,EAAEM,OAAOtD,MACf,IAAK,QACHQ,EAAKC,MAAQuC,EAAEM,OAAOpD,MACtB2B,KAAKC,SAAS,CAACtB,KAAMA,IACrB,MACF,IAAK,MACHA,EAAKE,IAAMsC,EAAEM,OAAOpD,MACpB2B,KAAKC,SAAS,CAACtB,KAAMA,IACrB,MACF,IAAK,aACHA,EAAKG,WAAaqC,EAAEM,OAAOpD,MAC3B2B,KAAKC,SAAS,CAACtB,KAAMA,IACrB,MACF,IAAK,YACHA,EAAKI,UAAYoC,EAAEM,OAAOpD,MAC1B2B,KAAKC,SAAS,CAACtB,KAAMA,IACrB,MACF,IAAK,cACHA,EAAKK,YAAcmC,EAAEM,OAAOpD,MAC5B2B,KAAKC,SAAS,CAACtB,KAAMA,O,2BAI3B,SAAcwC,GAAG,IAAD,OACV3B,EAAMQ,KAAKd,MAAMM,IACjBkC,EAAO1B,KAAKd,MAAMP,KACtB+C,EAAKlC,IAAMA,EAEXW,IAAMC,KAAKJ,KAAKd,MAAMC,OAAS,iBAC7BuB,KAAKC,UAAUe,GAAM,CAACrB,QAAQ,CAAC,eAAe,sBAC9CC,MAAK,SAAAC,GAEFA,EAAImB,KAAKC,QACVzB,MAAM,sEAENA,MAAM,sEAER,EAAKD,SAAS,CACZvC,aAAa,EACbc,cAAc,EACdZ,SAAS,KAEX,EAAKsD,iBACJV,OAAM,SAAAC,GACPP,MAAMQ,KAAKC,UAAUF,S,2BAGzB,SAAcmB,GAEZ,IAAIxD,EAAKwD,EAAMH,OAAOtD,KAClBJ,EAAQiC,KAAKd,MAAMM,IAAIO,QAAQ3B,GACnC,IAAa,GAAVL,EAAY,CACb,IAAIyB,EAAMQ,KAAKd,MAAMM,IAAIqC,MAAM,GAC/BrC,EAAIsC,KAAKF,EAAMH,OAAOtD,MACtB,IAAIH,EAAQgC,KAAKd,MAAMlB,MAAM6D,MAAM,GACnC7D,EAAM8D,KAAKF,EAAMH,OAAOpD,OACxB2B,KAAKC,SAAS,CACZT,IAAIA,EACJxB,MAAMA,QAEL,CACH,IAAIwB,EAAMQ,KAAKd,MAAMM,IAAIqC,MAAM,GAC3B7D,EAAQgC,KAAKd,MAAMlB,MAAM6D,MAAM,GACnCrC,EAAIuC,OAAOhE,EAAO,GAClBC,EAAM+D,OAAOhE,EAAO,GACpBiC,KAAKC,SAAS,CACZT,IAAIA,EACJxB,MAAMA,O,qBAIZ,SAAQ4D,GACN5B,KAAKC,SAAS,CACZzB,cAAc,EACdd,aAAa,M,yBAGjB,WAAc,IAAD,OACXyC,IAAM6B,IAAIhC,KAAKd,MAAMC,OAAS,cAC3BmB,MAAK,SAAAC,GACJ,IAAI0B,EAASvB,KAAKwB,MAAM3B,EAAImB,KAAKA,KAAKS,MACtC,EAAKlC,SAAS,CACZrC,SAAUqE,EAAOA,OAAOG,KACxB1E,aAAa,EACbc,cAAc,OAEfgC,OAAM,SAAAC,GACPP,MAAMQ,KAAKC,UAAUF,S,mBAK3B,WAAQ,IAAD,OACLN,IAAM6B,IAAIhC,KAAKd,MAAMC,OAAS,cACzBmB,MAAK,SAAAC,GACDA,EAAImB,MACL,EAAKW,YAAY9B,EAAImB,SAEtBlB,OAAM,SAAAC,GACXP,MAAM,eAAiBQ,KAAKC,UAAUF,S,yBAG1C,SAAYrB,GAEV,IAAIkD,EAAQtC,KACZuC,UAAWC,WAAWC,gBAAgB,CACpCrD,OAAQA,EACRsD,UAAY,SAASnC,GAEnB+B,EAAMpD,MAAMG,SAAWkB,EAAIoC,KAC3BxC,IAAM6B,IAAIM,EAAMpD,MAAMC,OAAS,mBAAqBmD,EAAMpD,MAAMG,UAC9DiB,MAAK,SAAAC,GACL,GAAIA,GAAOA,EAAImB,KAAKC,QAAS,CAC3B,IAAIrC,EAASiB,EAAImB,KAAKA,KAAKpC,OACvBC,EAAWgB,EAAImB,KAAKA,KAAKnC,SAC7BW,MAAM,6CAAYX,GAClBqD,YAAW,WACTN,EAAMrC,SAAS,CACbX,OAAOA,EACPC,SAASA,EACTnC,WAAW,EACXI,cAAc,MAEf,QAEH0C,MAAM,uBAAsBQ,KAAKC,UAAUJ,OAE5CC,OAAM,SAAAC,GACPP,MAAM,6BAA4BQ,KAAKC,UAAUF,QAGrDoC,OAAS,SAASC,GAEhB5C,MAAM,iCAAgCQ,KAAKC,UAAUmC,W,GArQ3CC,IAAMC,WA8QTC,cAAWhE,GC3XXiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACL,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACI,cAAC,IAAD,CAAOC,KAAI,IAAOC,UAAW7E,MAEnC8E,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.96f91bcc.chunk.js","sourcesContent":["import * as dd from 'dingtalk-jsapi';\nimport axios from 'axios';\nimport React from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\n\nfunction LoginBtn(props){\n  if(props.showLogin){\n    return(\n      <div>\n        <button type=\"button\" onClick={props.onClick}> 点击登录</button>\n      </div>\n    )\n  }return <div></div>\n}\nfunction RoleListBtn(props){\n  if(props.showRoleList){\n    return(\n      <div>\n        <button type=\"button\" onClick={props.onClick}> 查看用户组</button>\n      </div>\n    )\n  }return <div></div>\n}\n\n\nfunction NewRoleBoard(props){\n  if(props.showNewRole){\n    const todoItems = props.roleList.map((group, index) => {\n      const roles = group.roles.map((role, i) =>\n        <span key={role.id}>\n          <input type=\"checkbox\" name={role.id} value={role.name}\n            onChange={props.onChange}\n          />\n          <text>{role.name}</text>\n        </span>\n      )\n      return(\n          <div key={index}>\n            <div>{group.name}</div>\n            <div>\n              {roles}\n            </div>\n          </div>\n        )\n      }\n    )\n    return(\n      <div>\n        <button type=\"button\" onClick={props.onClick}>创建待办学习任务</button>\n        {todoItems}\n      </div>\n    )\n  }return <div></div>\n}\nfunction ToDoFormBoard(props) {\n  if(props.showToDoForm){\n    return(\n        <div>\n          学习任务\n            <text>代办人：{props.roles}</text>\n            <div className=\"page-section\">\n              <div className=\"form-row\">\n                <div className=\"form-row-label\">任务标题</div>\n                <div className=\"form-row-content\">\n                  <input name=\"title\" className=\"input\" placeholder=\"输入标题\"\n                         value={props.form.title}\n                         onChange={props.onChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-line\"/>\n              <div className=\"form-row\">\n                <div className=\"form-row-label\">任务链接</div>\n                <div className=\"form-row-content\">\n                  <input name=\"url\" className=\"input\" placeholder=\"输入任务链接\"\n                         value={props.form.url}\n                         onChange={props.onChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-line\"/>\n              <div className=\"form-row\">\n                <div className=\"form-row-label\">待办时间</div>\n                <div className=\"form-row-content\">\n                  <input name=\"createTime\" className=\"input\" placeholder=\"输入格式：yyyy-MM-dd hh:mm:ss\"\n                         value={props.form.createTime}\n                         onChange={props.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"page-section\">\n              <div className=\"form-row\">\n                <div className=\"form-row-label\">学习标题</div>\n                <div className=\"form-row-content\">\n                  <input name=\"formTitle\" className=\"input\" placeholder=\"输入学习标题\"\n                         value={props.form.formTitle}\n                         onChange={props.onChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-line\"/>\n              <div className=\"form-row\">\n                <div className=\"form-row-label\">学习内容</div>\n                <div className=\"form-row-content\">\n                  <input name=\"formContent\" className=\"input\" placeholder=\"输入学习内容\"\n                         value={props.form.formContent}\n                         onChange={props.onChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <button type=\"button\" onClick={props.onClick}>创建</button>\n            </div>\n        </div>\n    )\n  }return <div></div>\n}\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      // 替换成后端服务域名\n      domain:\"\",\n      corpId: '',\n      authCode:'',\n      userId:'',\n      userName:'',\n      showLogin: true, //登陆按钮\n      showRoleList: false, //查看用户组按钮\n      showNewRole: false, //角色列表\n      showToDoForm: false, //任务表单\n      roleList: [],\n      ids:new Array(),\n      roles:new Array(),\n      form:{\n        title:\"学习任务待办\",\n        url:\"/toLearn\",\n        createTime:\"2021-06-30 15:00:00\",\n        formTitle:\"学习标题\",\n        formContent:\"学习内容\"\n      },\n      bizId:'',\n      finish:false\n    };\n  }\n\n  getBizId(param){\n    if(param){\n      let arr = param.split(\"=\");\n      if(arr){\n        if(arr[0].indexOf(\"bizId\") != -1){\n          this.setState({\n            bizId:arr[1]\n          })\n        }\n      }\n    }else{\n      alert(\"param error!!!\", param);\n    }\n  }\n  finishLearn(){\n    if(this.state.finish){\n      alert(\"已完成\")\n      return;\n    }\n    axios.post(this.state.domain + \"/learnToDo/update\", {\n      userId:this.state.userId,\n      bizId:this.state.bizId,\n    },{headers:{\"Content-Type\":\"application/json\"}}).then(res => {\n      alert(\"完成学习\")\n      // alert(JSON.stringify(res))\n      this.setState({\n        finish:true\n      })\n    }).catch(error => {\n      alert(JSON.stringify(error))\n    })\n\n  }\n\n  render() {\n    let param = this.props.location.search;\n    if(param){\n      if(this.state.userId === \"\"){\n        this.login();\n      }\n      if(this.state.bizId === \"\"){\n        this.getBizId(param);\n      }\n      let status = this.state.finish ? <div>已完成</div> : <div>\n        学习中。。。\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={() => this.finishLearn()}>完成学习</button>\n      </div>\n      return (\n          <div>\n            {status}\n          </div>\n      );\n    }else{\n      return (\n          <div>\n            <LoginBtn\n                showLogin={this.state.showLogin}\n                onClick={() => this.login()}\n            />\n            <RoleListBtn\n                showRoleList={this.state.showRoleList}\n                onClick={() => this.getRoleList()}\n            />\n            <div>\n              <form>\n                <NewRoleBoard\n                    showNewRole={this.state.showNewRole}\n                    roleList={this.state.roleList}\n                    onChange={(e) => this.changeBoxToDo(e)}\n                    onClick={(e) => this.newToDo(e)}\n                />\n              </form>\n            </div>\n            <div>\n              <form>\n                <ToDoFormBoard\n                    showToDoForm={this.state.showToDoForm}\n                    roles={this.state.roles.join(\",\")}\n                    form={this.state.form}\n                    onChange={(e) => this.updateFormData(e)}\n                    onClick={(e) => this.newWorkRecord(e)}\n\n                />\n              </form>\n            </div>\n\n          </div>\n      );\n    }\n  }\n  updateFormData(e){\n    let form = this.state.form;\n    switch (e.target.name) {\n      case \"title\":\n        form.title = e.target.value;\n        this.setState({form: form});\n        break;\n      case \"url\":\n        form.url = e.target.value;\n        this.setState({form: form});\n        break;\n      case \"createTime\":\n        form.createTime = e.target.value;\n        this.setState({form: form});\n        break;\n      case \"formTitle\":\n        form.formTitle = e.target.value;\n        this.setState({form: form});\n        break;\n      case \"formContent\":\n        form.formContent = e.target.value;\n        this.setState({form: form});\n        break;\n    }\n  }\n  newWorkRecord(e){\n    let ids = this.state.ids;\n    let data = this.state.form;\n    data.ids = ids;\n    // alert(JSON.stringify(data));\n    axios.post(this.state.domain + \"/learnToDo/new\",\n      JSON.stringify(data),{headers:{\"Content-Type\":\"application/json\"}}\n    ).then(res => {\n      // alert(JSON.stringify(res));\n      if(res.data.success){\n        alert(\"创建学习任务待办成功！\")\n      }else{\n        alert(\"创建学习任务待办失败！\")\n      }\n      this.setState({\n        showNewRole: true,\n        showToDoForm: false,\n        roleList:[]\n      })\n      this.getRoleList();\n    }).catch(error => {\n      alert(JSON.stringify(error))\n    })\n  }\n  changeBoxToDo(event) {\n    // alert(\"====changeBoxTo====\");\n    let id = event.target.name;\n    let index = this.state.ids.indexOf(id);\n    if(index == -1){\n      let ids = this.state.ids.slice(0);\n      ids.push(event.target.name);\n      let roles = this.state.roles.slice(0);\n      roles.push(event.target.value);\n      this.setState({\n        ids:ids,\n        roles:roles\n      })\n    }else{\n      let ids = this.state.ids.slice(0);\n      let roles = this.state.roles.slice(0);\n      ids.splice(index, 1);\n      roles.splice(index, 1);\n      this.setState({\n        ids:ids,\n        roles:roles\n      })\n    }\n  }\n  newToDo(event) {\n    this.setState({\n      showToDoForm: true,\n      showNewRole: false,\n    })\n  }\n  getRoleList(){\n    axios.get(this.state.domain + \"/role/list\")\n      .then(res => {\n        let result = JSON.parse(res.data.data.body);\n        this.setState({\n          roleList: result.result.list,\n          showNewRole: true,\n          showToDoForm: false,\n        })\n      }).catch(error => {\n        alert(JSON.stringify(error))\n      })\n\n  }\n\n  login(){\n    axios.get(this.state.domain + \"/getCorpId\")\n        .then(res => {\n          if(res.data) {\n            this.loginAction(res.data);\n          }\n        }).catch(error => {\n      alert(\"corpId err, \" + JSON.stringify(error))\n    })\n  }\n  loginAction(corpId) {\n    // alert(\"corpId: \" +  corpId);\n    let _this = this;\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId,//企业 corpId\n      onSuccess : function(res) {\n        // 调用成功时回调\n        _this.state.authCode = res.code\n        axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n        ).then(res => {\n          if (res && res.data.success) {\n            let userId = res.data.data.userId;\n            let userName = res.data.data.userName;\n            alert('登录成功，你好' + userName);\n            setTimeout(function () {\n              _this.setState({\n                userId:userId,\n                userName:userName,\n                showLogin: false,\n                showRoleList: true\n              })\n            }, 0)\n          } else {\n            alert(\"login failed --->\" + JSON.stringify(res));\n          }\n        }).catch(error => {\n          alert(\"httpRequest failed --->\" + JSON.stringify(error))\n        })\n      },\n      onFail : function(err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      }\n    });\n  }\n\n}\n\n\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter basename='/'>\n        <Route path={`/`} component={App}></Route>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}